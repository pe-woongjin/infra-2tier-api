{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"infra-2tier-services \uc2dc\uc791 Infra 2tier Architecture - services \ub97c Terraform\uc73c\ub85c \uad6c\ud604\ud55c \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. \ud504\ub85c\uc81d\ud2b8 \ube4c\ub4dc \ubc0f \uc2e4\ud589\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uc21c\uc11c\ub85c \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4. 1. IAM \uacc4\uc815 \uc0dd\uc131 \ubc0f AWS CLI \ub97c \ud1b5\ud55c \ub85c\uceec \ud658\uacbd \uad6c\uc131 1.1 aws iam account \uc0dd\uc131 (aws console) AWS \uad00\ub9ac \ucf58\uc194\uc5d0\uc11c \ud504\ub85c\uadf8\ub798\ubc0d \ubc29\uc2dd \ub85c\uadf8\uc778 \uacc4\uc815 \uc0dd\uc131 \ubc0f AdministratorRole \ubd80\uc5ec 1.2 awscli install cmd $ brew install awscli 1.3 AWS local \ud658\uacbd \uc124\uc815 cmd $ aws configure AWS Access Key ID [****************KCPQ]: AWS Secret Access Key [****************OSRk]: Default region name [ap-northeast-2]: Default output format [None]: 2. terraform \uc124\uce58 \ubc0f \uc801\uc6a9 2.1 terraform \uc124\uce58 cmd $ brew install terraform 2.2 terraform \ud504\ub85c\uc81d\ud2b8 \uad6c\uc131 (git clone) cmd $ cd ~ cmd $ mkdir workspace cmd $ cd workspace /* git clone */ cmd $ git clone https://github.com/pe-woongjin/infra-2tier-services.git cmd $ cd ~/workspace/infra-2tier-services 2.3 \uc778\ud504\ub77c \uad6c\ucd95 /* \uac1c\ubc1c \ud658\uacbd \uae30\uc900 */ cmd $ cd ~/workspace/infra-2tier-services/development /* terraform */ cmd $ terraform init cmd $ terraform plan cmd $ terraform apply \u203b tf-repository\uac00 \uba3c\uc800 \uad6c\ud604\ub418\uc9c0 \uc54a\uc558\uc744 \ub54c \uc624\ub958 tf-repository\ub294 https://github.com/pe-woongjin/infra-2tier-base.git \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc6b0\uc120\uc801\uc73c\ub85c \uad6c\ucd95\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\ub2e4\ub294 \uac83\uc740, s3 & dynamodb\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \ub54c\ubb38\uc5d0, \uc544\ub798\uc758 \ubc29\uc2dd\uc73c\ub85c infra-2tier-base \uc778\ud504\ub77c\ub97c \uba3c\uc800 \uad6c\ucd95\ud55c \ud6c4, infra-2tier-services \uc778\ud504\ub77c\ub97c \uad6c\ucd95\ud574\uc8fc\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. /* \uc800\uc7a5\uc18c \uad6c\ucd95 */ cmd $ cd ~/workspace/infra-2tier-base/tf-repository /* terraform */ cmd $ terraform init cmd $ terraform plan cmd $ terraform apply","title":"Info"},{"location":"#infra-2tier-services","text":"Infra 2tier Architecture - services \ub97c Terraform\uc73c\ub85c \uad6c\ud604\ud55c \ud504\ub85c\uc81d\ud2b8\uc785\ub2c8\ub2e4. \ud504\ub85c\uc81d\ud2b8 \ube4c\ub4dc \ubc0f \uc2e4\ud589\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uc21c\uc11c\ub85c \uc774\ub8e8\uc5b4\uc9d1\ub2c8\ub2e4.","title":"infra-2tier-services \uc2dc\uc791"},{"location":"#1-iam-aws-cli","text":"","title":"1. IAM \uacc4\uc815 \uc0dd\uc131 \ubc0f AWS CLI \ub97c \ud1b5\ud55c \ub85c\uceec \ud658\uacbd \uad6c\uc131"},{"location":"#11-aws-iam-account-aws-console","text":"AWS \uad00\ub9ac \ucf58\uc194\uc5d0\uc11c \ud504\ub85c\uadf8\ub798\ubc0d \ubc29\uc2dd \ub85c\uadf8\uc778 \uacc4\uc815 \uc0dd\uc131 \ubc0f AdministratorRole \ubd80\uc5ec","title":"1.1 aws iam account \uc0dd\uc131 (aws console)"},{"location":"#12-awscli-install","text":"cmd $ brew install awscli","title":"1.2 awscli install"},{"location":"#13-aws-local","text":"cmd $ aws configure AWS Access Key ID [****************KCPQ]: AWS Secret Access Key [****************OSRk]: Default region name [ap-northeast-2]: Default output format [None]:","title":"1.3 AWS local \ud658\uacbd \uc124\uc815"},{"location":"#2-terraform","text":"","title":"2. terraform \uc124\uce58 \ubc0f \uc801\uc6a9"},{"location":"#21-terraform","text":"cmd $ brew install terraform","title":"2.1 terraform \uc124\uce58"},{"location":"#22-terraform-git-clone","text":"cmd $ cd ~ cmd $ mkdir workspace cmd $ cd workspace /* git clone */ cmd $ git clone https://github.com/pe-woongjin/infra-2tier-services.git cmd $ cd ~/workspace/infra-2tier-services","title":"2.2 terraform \ud504\ub85c\uc81d\ud2b8 \uad6c\uc131 (git clone)"},{"location":"#23","text":"/* \uac1c\ubc1c \ud658\uacbd \uae30\uc900 */ cmd $ cd ~/workspace/infra-2tier-services/development /* terraform */ cmd $ terraform init cmd $ terraform plan cmd $ terraform apply \u203b tf-repository\uac00 \uba3c\uc800 \uad6c\ud604\ub418\uc9c0 \uc54a\uc558\uc744 \ub54c \uc624\ub958 tf-repository\ub294 https://github.com/pe-woongjin/infra-2tier-base.git \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc6b0\uc120\uc801\uc73c\ub85c \uad6c\ucd95\ud569\ub2c8\ub2e4. \ud574\ub2f9 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\ub2e4\ub294 \uac83\uc740, s3 & dynamodb\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc74c\uc744 \uc758\ubbf8\ud569\ub2c8\ub2e4. \ub54c\ubb38\uc5d0, \uc544\ub798\uc758 \ubc29\uc2dd\uc73c\ub85c infra-2tier-base \uc778\ud504\ub77c\ub97c \uba3c\uc800 \uad6c\ucd95\ud55c \ud6c4, infra-2tier-services \uc778\ud504\ub77c\ub97c \uad6c\ucd95\ud574\uc8fc\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4. /* \uc800\uc7a5\uc18c \uad6c\ucd95 */ cmd $ cd ~/workspace/infra-2tier-base/tf-repository /* terraform */ cmd $ terraform init cmd $ terraform plan cmd $ terraform apply","title":"2.3 \uc778\ud504\ub77c \uad6c\ucd95"},{"location":"architecture/","text":"infra-2tier-services Architecture Infra 2tier Architecture - services \uc758 \uc778\ud504\ub77c \uc544\ud0a4\ud14d\ucc98 \ub17c\ub9ac \ubaa8\ub378\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.","title":"Architecture"},{"location":"architecture/#infra-2tier-services-architecture","text":"Infra 2tier Architecture - services \uc758 \uc778\ud504\ub77c \uc544\ud0a4\ud14d\ucc98 \ub17c\ub9ac \ubaa8\ub378\uc740 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.","title":"infra-2tier-services Architecture"},{"location":"directory/","text":"infra-2tier-services Directory infra-2tier-services\uc758 \ub514\ub809\ud1a0\ub9ac \uad6c\uc870\uc785\ub2c8\ub2e4. 1. modules elb \uc640 vpc \uac00 \uad6c\ud604\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. elb\uc640 vpc\ub294 \uae30\uc874 infra-2tier-base\uc5d0 \uae30\uad6c\ucd95\ub41c \ub9ac\uc18c\uc2a4\ub97c \ucc38\uc870 \ud569\ub2c8\ub2e4. 2. services api \uc640 ui \ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc11c\ube44\uc2a4\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ub418\ub294 \ub9ac\uc18c\uc2a4\ub4e4\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. 3. site 3.1 docs infra-2tier-services \uba85\uc138 \ubc0f \uc544\ud0a4\ud14d\uccd0 \uc640 \uad00\ub828\ub41c \ubb38\uc11c\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. 3.2 mkdocs \ub9e4\ub274\uc5bc \uac00\uc774\ub4dc \ud3f4\ub354\uc785\ub2c8\ub2e4. mkdocs \ub9c8\ud06c\ub2e4\uc6b4 \ubc29\uc2dd\uc73c\ub85c \uae00\uc4f0\uae30\ub97c \ud558\uba70, mkdocs serve \ub77c\ub294 \uba85\ub839\uc5b4\ub97c \ud1b5\ud574\uc11c \uc2e4\uc2dc\uac04\uc73c\ub85c \ub9e4\ub274\uc5bc \ub0b4\uc5ed\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ( mkdocs.org \ucc38\uace0)","title":"Directory"},{"location":"directory/#infra-2tier-services-directory","text":"infra-2tier-services\uc758 \ub514\ub809\ud1a0\ub9ac \uad6c\uc870\uc785\ub2c8\ub2e4.","title":"infra-2tier-services Directory"},{"location":"directory/#1-modules","text":"elb \uc640 vpc \uac00 \uad6c\ud604\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. elb\uc640 vpc\ub294 \uae30\uc874 infra-2tier-base\uc5d0 \uae30\uad6c\ucd95\ub41c \ub9ac\uc18c\uc2a4\ub97c \ucc38\uc870 \ud569\ub2c8\ub2e4.","title":"1. modules"},{"location":"directory/#2-services","text":"api \uc640 ui \ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \uac01 \uc11c\ube44\uc2a4\uc5d0\uc11c\ub9cc \uc0ac\uc6a9\ub418\ub294 \ub9ac\uc18c\uc2a4\ub4e4\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4.","title":"2. services"},{"location":"directory/#3-site","text":"","title":"3. site"},{"location":"directory/#31-docs","text":"infra-2tier-services \uba85\uc138 \ubc0f \uc544\ud0a4\ud14d\uccd0 \uc640 \uad00\ub828\ub41c \ubb38\uc11c\uac00 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"3.1 docs"},{"location":"directory/#32-mkdocs","text":"\ub9e4\ub274\uc5bc \uac00\uc774\ub4dc \ud3f4\ub354\uc785\ub2c8\ub2e4. mkdocs \ub9c8\ud06c\ub2e4\uc6b4 \ubc29\uc2dd\uc73c\ub85c \uae00\uc4f0\uae30\ub97c \ud558\uba70, mkdocs serve \ub77c\ub294 \uba85\ub839\uc5b4\ub97c \ud1b5\ud574\uc11c \uc2e4\uc2dc\uac04\uc73c\ub85c \ub9e4\ub274\uc5bc \ub0b4\uc5ed\uc744 \ud655\uc778\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. ( mkdocs.org \ucc38\uace0)","title":"3.2 mkdocs"},{"location":"modules/","text":"infra-2tier-services Modules modules\ub294 elb , vpc \ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. 1. ELB infra-2tier-base\uc5d0\uc11c \uae30\uad6c\ucd95\ud55c Application Load Balancer(ming-2t-apne2-prd-alb) \ub97c \ucc38\uc870\ud558\uc5ec, listener\uc640 listener rule\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. resource \"aws_alb_listener\" \"alb-listener443\" { -- ALB listener \uc124\uc815 load_balancer_arn = var.alb_id -- \uae30\uad6c\ucd95\ub41c ALB \ucc38\uc870 port = 443 -- \ud3ec\ud2b8 protocol = \"HTTPS\" -- \ud504\ub85c\ud1a0\ucf5c certificate_arn = var.acm_arn -- HTTPS \uc0ac\uc6a9\uc2dc \uc124\uc815 ... } resource \"aws_alb_listener_rule\" \"alb-listener443-rule\" { -- ALB listener rule \uc124\uc815 listener_arn = aws_alb_listener.alb-listener443.arn -- rule\uc744 attach\ud560 listener action { target_group_arn = var.api-a-tg8080.arn -- ALB\uc640 \uc5f0\uacb0\ub420 target group } condition { host_header { value = [ var.hosts.api ] -- header \uc124\uc815 } } ... } \ud574\ub2f9 ALB\uc5d0 api listener rule \uacfc ui listener rule \uc774 \ucd94\uac00\ub41c \ubaa8\uc2b5\uc785\ub2c8\ub2e4. 2. VPC infra-2tier-base\uc5d0\uc11c \uae30\uad6c\ucd95\ud55c VPC(ming-2t-apne2-prd-vpc) \ub97c \ucc38\uc870\ud558\uc5ec, subnet\uacfc route table\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. resource \"aws_subnet\" \"pri-sn\" { vpc_id = var.vpc_id count = length(var.pri_sn_list) cidr_block = lookup(var.pri_sn_list[count.index], \"cidr_block\") availability_zone = lookup(var.pri_sn_list[count.index], \"availability_zone\") depends_on = [ aws_route_table.pri-rt ] ... } resource \"aws_route_table\" \"pri-rt\" { vpc_id = var.vpc_id count = length(var.private_rt_tag_names) depends_on = [ var.igw_id, var.nat_id ] route { cidr_block = \"0.0.0.0/0\" nat_gateway_id = var.nat_id } ... } \ud574\ub2f9 VPC\ub97c \ucc38\uc870\ud558\uba74\uc11c private subnet , api subnet , ui subnet , private route-table \ub4f1\uc774 \uc0dd\uc131\ub41c \ubaa8\uc2b5\uc785\ub2c8\ub2e4.","title":"Modules"},{"location":"modules/#infra-2tier-services-modules","text":"modules\ub294 elb , vpc \ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"infra-2tier-services Modules"},{"location":"modules/#1-elb","text":"infra-2tier-base\uc5d0\uc11c \uae30\uad6c\ucd95\ud55c Application Load Balancer(ming-2t-apne2-prd-alb) \ub97c \ucc38\uc870\ud558\uc5ec, listener\uc640 listener rule\uc744 \ucd94\uac00\ud569\ub2c8\ub2e4. resource \"aws_alb_listener\" \"alb-listener443\" { -- ALB listener \uc124\uc815 load_balancer_arn = var.alb_id -- \uae30\uad6c\ucd95\ub41c ALB \ucc38\uc870 port = 443 -- \ud3ec\ud2b8 protocol = \"HTTPS\" -- \ud504\ub85c\ud1a0\ucf5c certificate_arn = var.acm_arn -- HTTPS \uc0ac\uc6a9\uc2dc \uc124\uc815 ... } resource \"aws_alb_listener_rule\" \"alb-listener443-rule\" { -- ALB listener rule \uc124\uc815 listener_arn = aws_alb_listener.alb-listener443.arn -- rule\uc744 attach\ud560 listener action { target_group_arn = var.api-a-tg8080.arn -- ALB\uc640 \uc5f0\uacb0\ub420 target group } condition { host_header { value = [ var.hosts.api ] -- header \uc124\uc815 } } ... } \ud574\ub2f9 ALB\uc5d0 api listener rule \uacfc ui listener rule \uc774 \ucd94\uac00\ub41c \ubaa8\uc2b5\uc785\ub2c8\ub2e4.","title":"1. ELB"},{"location":"modules/#2-vpc","text":"infra-2tier-base\uc5d0\uc11c \uae30\uad6c\ucd95\ud55c VPC(ming-2t-apne2-prd-vpc) \ub97c \ucc38\uc870\ud558\uc5ec, subnet\uacfc route table\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4. resource \"aws_subnet\" \"pri-sn\" { vpc_id = var.vpc_id count = length(var.pri_sn_list) cidr_block = lookup(var.pri_sn_list[count.index], \"cidr_block\") availability_zone = lookup(var.pri_sn_list[count.index], \"availability_zone\") depends_on = [ aws_route_table.pri-rt ] ... } resource \"aws_route_table\" \"pri-rt\" { vpc_id = var.vpc_id count = length(var.private_rt_tag_names) depends_on = [ var.igw_id, var.nat_id ] route { cidr_block = \"0.0.0.0/0\" nat_gateway_id = var.nat_id } ... } \ud574\ub2f9 VPC\ub97c \ucc38\uc870\ud558\uba74\uc11c private subnet , api subnet , ui subnet , private route-table \ub4f1\uc774 \uc0dd\uc131\ub41c \ubaa8\uc2b5\uc785\ub2c8\ub2e4.","title":"2. VPC"},{"location":"services/","text":"infra-2tier-services Services services\ub294 api , ui \ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. 1. API app-backend-springboot application\uc744 \uc704\ud55c \uc778\ud504\ub77c\uc785\ub2c8\ub2e4. application\uc744 \uc704\ud55c resource\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. 1.1 Security Group resource \"aws_security_group\" \"api-sg\" { -- Security Group resource \uc124\uc815 vpc_id = var.vpc_id -- VPC \uc124\uc815 ingress { -- Inbound rule \uc124\uc815 ... } egress { -- Outbound rule \uc124\uc815 ... } } 1.2 Target Group resource \"aws_alb_target_group\" \"api-a-tg8080\" { -- Target Group resource \uc124\uc815 port = 8080 -- \ud3ec\ud2b8 \uc124\uc815 protocol = \"HTTP\" -- protocol \uc124\uc815 target_type = \"instance\" -- \ud0c0\uac9f \uadf8\ub8f9\uc758 \ud0c0\uc785 \uc120\ud0dd(instance, ip, lambda) vpc_id = var.vpc_id -- VPC \uc124\uc815 health_check { healthy_threshold = 2 -- \uc5f0\uc18d\uc801 \uc0c1\ud0dc \uac80\uc0ac \uc131\uacf5 \ud69f\uc218(2-10) unhealthy_threshold = 2 -- \uc5f0\uc18d\uc801 \uc0c1\ud0dc \uac80\uc0ac \uc2e4\ud328 \ud69f\uc218(2~10) interval = 10 -- \uc0c1\ud0dc \uac80\uc0ac \uc0ac\uc774\uc758 \ub300\ub7b5\uc801\uc778 \uc2dc\uac04 macher = \"200\" -- \uc751\ub2f5 \uc131\uacf5 HTTP \ucf54\ub4dc(200~299) path = \"/health\" -- \uc0c1\ud0dc \uac80\uc0ac\uc758 \ub300\uc0c1 \uacbd\ub85c } ... } 1.3 Launch Template resource \"aws_launch_template\" \"api-lt\" { -- Launch Template resource \uc124\uc815 image_id = var.api_lt.id -- \uae30\uad6c\ucd95\ub41c image id instance_type = var.api_lt.key_name -- \uae30\uad6c\ucd95\ub41c image\uc758 \ud0c0\uc785 key_name = var.api_lt.type -- \ud574\ub2f9 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c key name vpc_security_group_ids = [ id ] -- \uad00\ub828 security group ids iam_instance_profile { } -- The IAM Instance Profile to launch the instance with ... } 1.4 Autoscaling Group resource \"aws_autoscaling_group\" \"api-a-asg\" { -- Autoscaling Group resource \uc124\uc815 launch_template { } -- \uae30\uad6c\ucd95\ub41c Launch Template \uc815\ubcf4 vpc_zone_identifier = var.api-sn-id -- \uae30\uad6c\ucd95\ub41c subnet ids target_group_arns = [ arn ] -- \uae30\uad6c\ucd95\ub41c target group arns(autoscaling \ub300\uc0c1) health_check_type = \"ELB\" -- health check \ubc29\ubc95 \uc124\uc815(EC2, ELB) min_size = var.api_lt.min_size -- instance\uc758 \ucd5c\uc18c \uac2f\uc218 max_size = var.api_lt.max_size -- instance\uc758 \ucd5c\ub300 \uac2f\uc218 ... } 1.5 Code Deploy data \"aws_iam_role\" \"codedeploy_role\" { -- IAM role \uc124\uc815 name = var.cd_role_name -- \uae30\uad6c\ucd95\ub41c role name \uc124\uc815 } resource \"aws_codedeploy_deployment_group\" \"api-cd-group-a\" { -- Codedeploy Deployment Group resource \uc124\uc815 deployment_config_name = \"CodeDeployDefault.AllAtOnce\" -- \ubc30\ud3ec \uc124\uc815 service_role_arn = codedeploy-role.arn -- \ubc30\ud3ec role autoscaling_groups = [ id ] -- \ubc30\ud3ec\ud560 Autoscaling Group deployment_style { } -- \ubc30\ud3ec \uc2a4\ud0c0\uc77c(in-place, blue/green) ... } 2. UI app-frontend-vue application\uc744 \uc704\ud55c \uc778\ud504\ub77c\uc785\ub2c8\ub2e4. application\uc744 \uc704\ud55c resource\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. 2.1 Security Group resource \"aws_security_group\" \"ui-sg\" { -- Security Group resource \uc124\uc815 vpc_id = var.vpc_id -- VPC \uc124\uc815 ingress { -- Inbound rule \uc124\uc815 ... } egress { -- Outbound rule \uc124\uc815 ... } } 2.2 Target Group resource \"aws_alb_target_group\" \"ui-a-tg80\" { -- Target Group resource \uc124\uc815 port = 80 -- \ud3ec\ud2b8 \uc124\uc815 protocol = \"HTTP\" -- protocol \uc124\uc815 target_type = \"instance\" -- \ud0c0\uac9f \uadf8\ub8f9\uc758 \ud0c0\uc785 \uc120\ud0dd(instance, ip, lambda) vpc_id = var.vpc_id -- VPC \uc124\uc815 health_check { healthy_threshold = 2 -- \uc5f0\uc18d\uc801 \uc0c1\ud0dc \uac80\uc0ac \uc131\uacf5 \ud69f\uc218(2-10) unhealthy_threshold = 2 -- \uc5f0\uc18d\uc801 \uc0c1\ud0dc \uac80\uc0ac \uc2e4\ud328 \ud69f\uc218(2~10) interval = 10 -- \uc0c1\ud0dc \uac80\uc0ac \uc0ac\uc774\uc758 \ub300\ub7b5\uc801\uc778 \uc2dc\uac04 macher = \"200\" -- \uc751\ub2f5 \uc131\uacf5 HTTP \ucf54\ub4dc(200~299) path = \"/\" -- \uc0c1\ud0dc \uac80\uc0ac\uc758 \ub300\uc0c1 \uacbd\ub85c } ... } 2.3 Launch Template resource \"aws_launch_template\" \"ui-lt\" { -- Launch Template resource \uc124\uc815 image_id = var.ui.id -- \uae30\uad6c\ucd95\ub41c image id instance_type = var.ui.key_name -- \uae30\uad6c\ucd95\ub41c image\uc758 \ud0c0\uc785 key_name = var.ui.type -- \ud574\ub2f9 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c key name vpc_security_group_ids = [ id ] -- \uad00\ub828 security group ids iam_instance_profile { } -- The IAM Instance Profile to launch the instance with ... } 2.4 Autoscaling Group resource \"aws_autoscaling_group\" \"ui-a-asg\" { -- Autoscaling Group resource \uc124\uc815 launch_template { } -- \uae30\uad6c\ucd95\ub41c Launch Template \uc815\ubcf4 vpc_zone_identifier = var.ui-sn-id -- \uae30\uad6c\ucd95\ub41c subnet ids target_group_arns = [ arn ] -- \uae30\uad6c\ucd95\ub41c target group arns(autoscaling \ub300\uc0c1) health_check_type = \"ELB\" -- health check \ubc29\ubc95 \uc124\uc815(EC2, ELB) min_size = var.ui_lt.min_size -- instance\uc758 \ucd5c\uc18c \uac2f\uc218 max_size = var.ui_lt.max_size -- instance\uc758 \ucd5c\ub300 \uac2f\uc218 ... } 2.5 Code Deploy data \"aws_iam_role\" \"codedeploy_role\" { -- IAM role \uc124\uc815 name = var.cd_role_name -- \uae30\uad6c\ucd95\ub41c role name \uc124\uc815 } resource \"aws_codedeploy_deployment_group\" \"ui-cd-group-a\" { -- Codedeploy Deployment Group resource \uc124\uc815 deployment_config_name = \"CodeDeployDefault.AllAtOnce\" -- \ubc30\ud3ec \uc124\uc815 service_role_arn = codedeploy-role.arn -- \ubc30\ud3ec role autoscaling_groups = [ id ] -- \ubc30\ud3ec\ud560 Autoscaling Group deployment_style { } -- \ubc30\ud3ec \uc2a4\ud0c0\uc77c(in-place, blue/green) ... }","title":"Services"},{"location":"services/#infra-2tier-services-services","text":"services\ub294 api , ui \ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.","title":"infra-2tier-services Services"},{"location":"services/#1-api","text":"app-backend-springboot application\uc744 \uc704\ud55c \uc778\ud504\ub77c\uc785\ub2c8\ub2e4. application\uc744 \uc704\ud55c resource\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.","title":"1. API"},{"location":"services/#11-security-group","text":"resource \"aws_security_group\" \"api-sg\" { -- Security Group resource \uc124\uc815 vpc_id = var.vpc_id -- VPC \uc124\uc815 ingress { -- Inbound rule \uc124\uc815 ... } egress { -- Outbound rule \uc124\uc815 ... } }","title":"1.1 Security Group"},{"location":"services/#12-target-group","text":"resource \"aws_alb_target_group\" \"api-a-tg8080\" { -- Target Group resource \uc124\uc815 port = 8080 -- \ud3ec\ud2b8 \uc124\uc815 protocol = \"HTTP\" -- protocol \uc124\uc815 target_type = \"instance\" -- \ud0c0\uac9f \uadf8\ub8f9\uc758 \ud0c0\uc785 \uc120\ud0dd(instance, ip, lambda) vpc_id = var.vpc_id -- VPC \uc124\uc815 health_check { healthy_threshold = 2 -- \uc5f0\uc18d\uc801 \uc0c1\ud0dc \uac80\uc0ac \uc131\uacf5 \ud69f\uc218(2-10) unhealthy_threshold = 2 -- \uc5f0\uc18d\uc801 \uc0c1\ud0dc \uac80\uc0ac \uc2e4\ud328 \ud69f\uc218(2~10) interval = 10 -- \uc0c1\ud0dc \uac80\uc0ac \uc0ac\uc774\uc758 \ub300\ub7b5\uc801\uc778 \uc2dc\uac04 macher = \"200\" -- \uc751\ub2f5 \uc131\uacf5 HTTP \ucf54\ub4dc(200~299) path = \"/health\" -- \uc0c1\ud0dc \uac80\uc0ac\uc758 \ub300\uc0c1 \uacbd\ub85c } ... }","title":"1.2 Target Group"},{"location":"services/#13-launch-template","text":"resource \"aws_launch_template\" \"api-lt\" { -- Launch Template resource \uc124\uc815 image_id = var.api_lt.id -- \uae30\uad6c\ucd95\ub41c image id instance_type = var.api_lt.key_name -- \uae30\uad6c\ucd95\ub41c image\uc758 \ud0c0\uc785 key_name = var.api_lt.type -- \ud574\ub2f9 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c key name vpc_security_group_ids = [ id ] -- \uad00\ub828 security group ids iam_instance_profile { } -- The IAM Instance Profile to launch the instance with ... }","title":"1.3 Launch Template"},{"location":"services/#14-autoscaling-group","text":"resource \"aws_autoscaling_group\" \"api-a-asg\" { -- Autoscaling Group resource \uc124\uc815 launch_template { } -- \uae30\uad6c\ucd95\ub41c Launch Template \uc815\ubcf4 vpc_zone_identifier = var.api-sn-id -- \uae30\uad6c\ucd95\ub41c subnet ids target_group_arns = [ arn ] -- \uae30\uad6c\ucd95\ub41c target group arns(autoscaling \ub300\uc0c1) health_check_type = \"ELB\" -- health check \ubc29\ubc95 \uc124\uc815(EC2, ELB) min_size = var.api_lt.min_size -- instance\uc758 \ucd5c\uc18c \uac2f\uc218 max_size = var.api_lt.max_size -- instance\uc758 \ucd5c\ub300 \uac2f\uc218 ... }","title":"1.4 Autoscaling Group"},{"location":"services/#15-code-deploy","text":"data \"aws_iam_role\" \"codedeploy_role\" { -- IAM role \uc124\uc815 name = var.cd_role_name -- \uae30\uad6c\ucd95\ub41c role name \uc124\uc815 } resource \"aws_codedeploy_deployment_group\" \"api-cd-group-a\" { -- Codedeploy Deployment Group resource \uc124\uc815 deployment_config_name = \"CodeDeployDefault.AllAtOnce\" -- \ubc30\ud3ec \uc124\uc815 service_role_arn = codedeploy-role.arn -- \ubc30\ud3ec role autoscaling_groups = [ id ] -- \ubc30\ud3ec\ud560 Autoscaling Group deployment_style { } -- \ubc30\ud3ec \uc2a4\ud0c0\uc77c(in-place, blue/green) ... }","title":"1.5 Code Deploy"},{"location":"services/#2-ui","text":"app-frontend-vue application\uc744 \uc704\ud55c \uc778\ud504\ub77c\uc785\ub2c8\ub2e4. application\uc744 \uc704\ud55c resource\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4.","title":"2. UI"},{"location":"services/#21-security-group","text":"resource \"aws_security_group\" \"ui-sg\" { -- Security Group resource \uc124\uc815 vpc_id = var.vpc_id -- VPC \uc124\uc815 ingress { -- Inbound rule \uc124\uc815 ... } egress { -- Outbound rule \uc124\uc815 ... } }","title":"2.1 Security Group"},{"location":"services/#22-target-group","text":"resource \"aws_alb_target_group\" \"ui-a-tg80\" { -- Target Group resource \uc124\uc815 port = 80 -- \ud3ec\ud2b8 \uc124\uc815 protocol = \"HTTP\" -- protocol \uc124\uc815 target_type = \"instance\" -- \ud0c0\uac9f \uadf8\ub8f9\uc758 \ud0c0\uc785 \uc120\ud0dd(instance, ip, lambda) vpc_id = var.vpc_id -- VPC \uc124\uc815 health_check { healthy_threshold = 2 -- \uc5f0\uc18d\uc801 \uc0c1\ud0dc \uac80\uc0ac \uc131\uacf5 \ud69f\uc218(2-10) unhealthy_threshold = 2 -- \uc5f0\uc18d\uc801 \uc0c1\ud0dc \uac80\uc0ac \uc2e4\ud328 \ud69f\uc218(2~10) interval = 10 -- \uc0c1\ud0dc \uac80\uc0ac \uc0ac\uc774\uc758 \ub300\ub7b5\uc801\uc778 \uc2dc\uac04 macher = \"200\" -- \uc751\ub2f5 \uc131\uacf5 HTTP \ucf54\ub4dc(200~299) path = \"/\" -- \uc0c1\ud0dc \uac80\uc0ac\uc758 \ub300\uc0c1 \uacbd\ub85c } ... }","title":"2.2 Target Group"},{"location":"services/#23-launch-template","text":"resource \"aws_launch_template\" \"ui-lt\" { -- Launch Template resource \uc124\uc815 image_id = var.ui.id -- \uae30\uad6c\ucd95\ub41c image id instance_type = var.ui.key_name -- \uae30\uad6c\ucd95\ub41c image\uc758 \ud0c0\uc785 key_name = var.ui.type -- \ud574\ub2f9 \uc778\uc2a4\ud134\uc2a4\ub97c \uc0ac\uc6a9\ud558\uae30 \uc704\ud55c key name vpc_security_group_ids = [ id ] -- \uad00\ub828 security group ids iam_instance_profile { } -- The IAM Instance Profile to launch the instance with ... }","title":"2.3 Launch Template"},{"location":"services/#24-autoscaling-group","text":"resource \"aws_autoscaling_group\" \"ui-a-asg\" { -- Autoscaling Group resource \uc124\uc815 launch_template { } -- \uae30\uad6c\ucd95\ub41c Launch Template \uc815\ubcf4 vpc_zone_identifier = var.ui-sn-id -- \uae30\uad6c\ucd95\ub41c subnet ids target_group_arns = [ arn ] -- \uae30\uad6c\ucd95\ub41c target group arns(autoscaling \ub300\uc0c1) health_check_type = \"ELB\" -- health check \ubc29\ubc95 \uc124\uc815(EC2, ELB) min_size = var.ui_lt.min_size -- instance\uc758 \ucd5c\uc18c \uac2f\uc218 max_size = var.ui_lt.max_size -- instance\uc758 \ucd5c\ub300 \uac2f\uc218 ... }","title":"2.4 Autoscaling Group"},{"location":"services/#25-code-deploy","text":"data \"aws_iam_role\" \"codedeploy_role\" { -- IAM role \uc124\uc815 name = var.cd_role_name -- \uae30\uad6c\ucd95\ub41c role name \uc124\uc815 } resource \"aws_codedeploy_deployment_group\" \"ui-cd-group-a\" { -- Codedeploy Deployment Group resource \uc124\uc815 deployment_config_name = \"CodeDeployDefault.AllAtOnce\" -- \ubc30\ud3ec \uc124\uc815 service_role_arn = codedeploy-role.arn -- \ubc30\ud3ec role autoscaling_groups = [ id ] -- \ubc30\ud3ec\ud560 Autoscaling Group deployment_style { } -- \ubc30\ud3ec \uc2a4\ud0c0\uc77c(in-place, blue/green) ... }","title":"2.5 Code Deploy"}]}